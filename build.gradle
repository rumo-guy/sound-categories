plugins {
    id "fabric-loom" version "0.12-SNAPSHOT"
    id "maven-publish"
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id "com.modrinth.minotaur" version "2.2.0"
    id "org.jetbrains.changelog" version "1.3.1"
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

def compatibleVersions = ["1.19.3", "1.19.2", "1.19.1", "1.19"]

repositories {
    mavenLocal()
    maven {
        name = "stashymane's repo"
        url = "https://repo.stashy.dev"
    }
    maven {
        url "https://jitpack.io"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.api_version}"
    include(modApi("dev.stashy:MixinSwap:1.0.0-SNAPSHOT"))
}

loom {
    accessWidenerPath = file("src/main/resources/soundcategories.accesswidener")

    runs {
        client {
            source = sourceSets.test
        }
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
        maven {
            url = "https://repo.stashy.dev"
            credentials {
                username = project.hasProperty("publish_username") ? project.publish_username : ""
                password = project.hasProperty("publish_password") ? project.publish_password : ""
            }
        }
    }
}

changelog {
    version = project.mod_version
}

def currentChangelog = project.changelog.getLatest()

curseforge {
    apiKey = System.getenv("CURSE_API_KEY") ?: ""
    project {
        id = "557374"
        changelog = currentChangelog.toHTML()
        changelogType = "html"
        releaseType = "release"
        for (String ver : compatibleVersions)
            addGameVersion ver

        mainArtifact(remapJar) {
            displayName = project.mod_version
            relations {
                requiredDependency("fabric-api")
            }
        }
    }

    options {
        forgeGradleIntegration = false
        detectNewerJava = true
    }
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN") ?: ""
    changelog = currentChangelog.toText()
    projectId = "GROGt4v1"
    versionNumber = version
    versionName = project.mod_version
    uploadFile = remapJar
    gameVersions = compatibleVersions
    loaders = ["fabric"]
}

task publishMod() {
    dependsOn(tasks.modrinth)
    dependsOn(tasks.curseforge)
}
